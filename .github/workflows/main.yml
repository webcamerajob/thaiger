name: Parse & Post (Thaiger)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
  
permissions:
  contents: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '30 22-23 * * *'
    - cron: '30 0-11 * * *'
    
env:
  POST_DELAY: 10
  BATCH_LIMIT: 15
  TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
  TELEGRAM_CHANNEL: ${{ secrets.TELEGRAM_CHANNEL }}

jobs:
  build-and-publish:
    name: Parse and Publish (Thaiger)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install requirements
        run: |
          if [ -f requirements-parser.txt ]; then pip install -r requirements-parser.txt; fi
          if [ -f requirements-poster.txt ]; then pip install -r requirements-poster.txt; fi

      - name: Run parser
        id: parse_step
        run: |
          python3 main.py \
            --base-url "https://www.thethaiger.com" \
            --slug "national" \
            --lang 'ru' \
            --limit 15 \
            --posted-state-file articles/posted.json | tee parser_output.txt
          
          NEW_ARTICLES_STATUS=$(grep "NEW_ARTICLES_STATUS:" parser_output.txt | cut -d: -f2 | tr -d '[:space:]')
          echo "new_articles_found=$NEW_ARTICLES_STATUS" >> $GITHUB_OUTPUT

      - name: Run poster
        if: steps.parse_step.outputs.new_articles_found == 'true'
        run: |
          python3 poster.py \
            --parsed-dir articles \
            --state-file articles/posted.json \
            --limit $BATCH_LIMIT

      - name: Commit updated data files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          if [ -f "articles/posted.json" ]; then
            git add articles/posted.json
          fi
          if [ -f "articles/catalog.json" ]; then
            git add articles/catalog.json
          fi

          if ! git diff --cached --quiet; then
            git commit -m "chore: update data files"
            git pull --rebase origin main
            git push
          else
            echo "âœ… Data files unchanged"
          fi
